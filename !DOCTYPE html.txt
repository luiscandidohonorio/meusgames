<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <title>Corrida P√≥s-P√°scoa</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    body {
      margin: 0;
      overflow: hidden;
      background: #f3e5ab;
      font-family: sans-serif;
    }
    canvas {
      display: block;
    }
  </style>
</head>
<body>
  <div id="hud" class="absolute top-2 left-2 bg-black bg-opacity-50 text-white p-2 rounded-lg">
    ‚è±Ô∏è <span id="timer">0.00</span> | ü•ö x<span id="eggs">0</span>
  </div>

  <div id="startPanel" class="fixed inset-0 bg-black bg-opacity-80 text-white flex flex-col items-center justify-center text-3xl">
    <p class="mb-6">CORRIDA P√ìS-P√ÅSCOA</p>
    <button onclick="startGame('Lepraus')" class="bg-yellow-400 hover:bg-yellow-500 text-black px-6 py-3 rounded-2xl text-xl shadow-lg transition-all duration-300 mb-4">
      Jogar com Lepraus üê∞
    </button>
    <button onclick="startGame('Falko')" class="bg-blue-400 hover:bg-blue-500 text-black px-6 py-3 rounded-2xl text-xl shadow-lg transition-all duration-300">
      Jogar com Falko ü¶Ö
    </button>
  </div>

  <div id="winnerPanel" class="fixed inset-0 bg-black bg-opacity-70 text-white hidden flex-col items-center justify-center text-4xl">
    <div id="winnerText" class="mb-6"></div>
    <button onclick="location.reload()" class="bg-green-400 hover:bg-green-500 text-black px-6 py-3 rounded-2xl text-xl shadow-lg transition-all duration-300">
      Jogar Novamente
    </button>
  </div>

  <canvas id="gameCanvas" width="1000" height="400"></canvas>

  <script>
    const canvas = document.getElementById("gameCanvas");
    const ctx = canvas.getContext("2d");
    const timerText = document.getElementById("timer");
    const eggCountText = document.getElementById("eggs");
    const startPanel = document.getElementById("startPanel");
    const winnerPanel = document.getElementById("winnerPanel");
    const winnerText = document.getElementById("winnerText");

    let timer = 0;
    let eggCount = 0;
    let gameStarted = false;
    let lastTime = 0;

    const finishLine = 900;
    const eggPositions = [200, 400, 600, 800];
    const collectedEggs = new Set();

    const gravity = 600;
    const jumpSpeed = -300;

    const playerSprites = {
      "Lepraus": new Image(),
      "Falko": new Image()
    };
    playerSprites["Lepraus"].src = "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e8/Leprechaun_icon.svg/48px-Leprechaun_icon.svg.png";
    playerSprites["Falko"].src = "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Falcon_icon.svg/48px-Falcon_icon.svg.png";

    const playerTemplate = {
      Lepraus: { name: "Lepraus", x: 50, y: 300, vy: 0, onGround: true, keyLeft: 'a', keyRight: 'd', keyJump: 'w' },
      Falko: { name: "Falko", x: 50, y: 350, vy: 0, onGround: true, keyLeft: 'j', keyRight: 'l', keyJump: 'i' }
    };

    let players = [];
    let mainPlayer, opponent;
    const keys = {};
    document.addEventListener("keydown", e => keys[e.key] = true);
    document.addEventListener("keyup", e => keys[e.key] = false);

    function startGame(characterName) {
      mainPlayer = { ...playerTemplate[characterName] };
      opponent = { ...playerTemplate[characterName === "Lepraus" ? "Falko" : "Lepraus"] };
      players = [mainPlayer, opponent];
      gameStarted = true;
      startPanel.style.transition = "opacity 0.5s ease";
      startPanel.style.opacity = "0";
      setTimeout(() => {
        startPanel.style.display = "none";
        lastTime = performance.now();
        requestAnimationFrame(gameLoop);
      }, 500);
    }

    function checkEggCollection(player) {
      eggPositions.forEach(pos => {
        if (!collectedEggs.has(pos) && Math.abs(player.x - pos) < 20) {
          collectedEggs.add(pos);
          eggCount++;
          eggCountText.textContent = eggCount;
        }
      });
    }

    function checkWin(player) {
      if (player.x >= finishLine) {
        const emoji = player.name === "Lepraus" ? "üê∞" : "ü¶Ö";
        winnerText.textContent = `${emoji} ${player.name} venceu em ${timer.toFixed(2)}s! üèÅ`;
        winnerPanel.style.display = "flex";
        winnerPanel.style.opacity = "0";
        setTimeout(() => {
          winnerPanel.style.transition = "opacity 0.5s ease";
          winnerPanel.style.opacity = "1";
        }, 50);
        gameStarted = false;
      }
    }

    function gameLoop(timestamp) {
      if (!gameStarted) return;

      let delta = (timestamp - lastTime) / 1000;
      lastTime = timestamp;
      timer += delta;
      timerText.textContent = timer.toFixed(2);

      ctx.clearRect(0, 0, canvas.width, canvas.height);

      ctx.fillStyle = "red";
      ctx.fillRect(finishLine, 0, 5, canvas.height);

      ctx.fillStyle = "gold";
      eggPositions.forEach(pos => {
        if (!collectedEggs.has(pos)) {
          ctx.beginPath();
          ctx.arc(pos, 370, 10, 0, Math.PI * 2);
          ctx.fill();
        }
      });

      players.forEach(player => {
        if (player === mainPlayer) {
          if (keys[player.keyLeft]) player.x -= 200 * delta;
          if (keys[player.keyRight]) player.x += 200 * delta;
          if (keys[player.keyJump] && player.onGround) {
            player.vy = jumpSpeed;
            player.onGround = false;
          }
        } else {
          // Simples IA: anda constantemente para frente
          player.x += 150 * delta;
        }

        player.vy += gravity * delta;
        player.y += player.vy * delta;

        let baseY = player.name === "Lepraus" ? 300 : 350;
        if (player.y > baseY) {
          player.y = baseY;
          player.vy = 0;
          player.onGround = true;
        }

        ctx.drawImage(playerSprites[player.name], player.x, player.y, 30, 30);

        checkEggCollection(player);
        checkWin(player);
      });

      requestAnimationFrame(gameLoop);
    }
  </script>
</body>
</html>
